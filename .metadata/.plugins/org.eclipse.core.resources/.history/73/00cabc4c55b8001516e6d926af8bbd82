import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

public class Game {

	ArrayList<Win> listOfWins = new ArrayList<>();
	static int iterNum = 0;
	
	public static void main(String args[]) throws IOException	{
		File f = Puzzle.generateFile(); //generate the user's file
        Puzzle p = Puzzle.readFile(f); //construct the solved puzzle based on the information
		System.out.println("Lel");
	}
	
	public Puzzle solve(Puzzle solvedPuzzle, Puzzle remainingPieces)	{
		switch (solvedPuzzle.board.size())	{
		case 0:	{
			Puzzle possiblySolved = null;
			int pieceCount = 0;
			int orientation = 0;
			while (pieceCount < 10) {
				Piece chosenPiece = remainingPieces.board.remove(pieceCount);
				chosenPiece.setOrientation(orientation);
				solvedPuzzle.board.add(chosenPiece);
				
				possiblySolved = solve(solvedPuzzle, remainingPieces);
				
				if (possiblySolved.board.size() == 9)	{
					listOfWins.add(new Win(possiblySolved, iterNum, duration))
				}
				
				orientation = (++orientation) % 4;
				if (orientation == 0)	{
					pieceCount++;
				}
			}
			return possiblySolved;
		}
		case 1:	{
			Puzzle possiblySolved = null;
			int pieceCount = 0;
			int orientation = 0;
			while (pieceCount < 9) {
				Piece chosenPiece = remainingPieces.board.remove(pieceCount);
				chosenPiece.setOrientation(orientation);
				solvedPuzzle.board.add(chosenPiece);
				
				solvedPuzzle.
				
				possiblySolved = solve(solvedPuzzle, remainingPieces);
				orientation = (++orientation) % 4;
				if (orientation == 0)	{
					pieceCount++;
				}
			}
			return possiblySolved;
		}
		case 2:	{
			Puzzle possiblySolved = null;
			int pieceCount = 0;
			int orientation = 0;
			while (pieceCount < 9) {
				Piece chosenPiece = remainingPieces.board.remove(pieceCount);
				chosenPiece.setOrientation(orientation);
				solvedPuzzle.board.add(chosenPiece);
				
				possiblySolved = solve(solvedPuzzle, remainingPieces);
				orientation = (++orientation) % 4;
				if (orientation == 0)	{
					pieceCount++;
				}
			}
			return possiblySolved;
		}
		}
	}
}
