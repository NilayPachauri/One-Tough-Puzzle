import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.LineNumberReader;

import javax.swing.JOptionPane;

public class Puzzle {
	Piece[][] board;
	
	public Puzzle()	{
		board = new Piece[3][3];
	}
	
	public Puzzle(Piece[][] board)	{
		this.board = board;
	}
	
	@SuppressWarnings("finally")
	public static Piece[][] readFile(File f) throws IOException	{
		Piece[][] board = new Piece[3][3];
		
		LineNumberReader  lnr = new LineNumberReader(new FileReader(f));
		lnr.skip(Long.MAX_VALUE);
		
		if (lnr.getLineNumber() != 9)	{
			JOptionPane.showMessageDialog(null, "THERE ARE AN INCORRECT NUMBER OF LINES IN YOUR FILE. FILE NOT READ", "ERROR", JOptionPane.WARNING_MESSAGE);
			return new Piece[3][3];
		}	else	{
			JOptionPane.showMessageDialog(null, "File read successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
		}
		
		BufferedReader br = new BufferedReader(new FileReader(f));
		
		String line;
		String[] parsedElements;
		int[] sides = new int[4];
		int count = 0;
		
		try {
			while((line = br.readLine()) != null)	{
				count++;
				
				parsedElements = line.split(",");
				
				for (int i = 0; i < parsedElements.length; ++i)	{
					sides[i] = Integer.parseInt(parsedElements[i]);
				}
				
				board[count / 3][count % 3] = new Piece(sides, "Piece " + count);	
			}
		} catch (NumberFormatException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally	{
			br.close();
			return board;
		}
	}
}
